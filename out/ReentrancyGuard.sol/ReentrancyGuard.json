{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/math/=lib/v2-core/node_modules/@prb/math/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sablier/=lib/sablier/\",\":solady/=lib/v2-core/node_modules/solady/\",\":solarray/=lib/v2-core/node_modules/solarray/\",\":v2-core/=lib/v2-core/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@prb/math/=lib/v2-core/node_modules/@prb/math/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sablier/=lib/sablier/","solady/=lib/v2-core/node_modules/solady/","solarray/=lib/v2-core/node_modules/solarray/","v2-core/=lib/v2-core/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3","urls":["bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a","dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol","id":41299,"exportedSymbols":{"ReentrancyGuard":[41298]},"nodeType":"SourceUnit","src":"109:3275:30","nodes":[{"id":41231,"nodeType":"PragmaDirective","src":"109:24:30","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":41298,"nodeType":"ContractDefinition","src":"1030:2353:30","nodes":[{"id":41235,"nodeType":"VariableDeclaration","src":"1818:40:30","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:30","scope":41298,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":41234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:30","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":41238,"nodeType":"VariableDeclaration","src":"1864:36:30","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:30","scope":41298,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41236,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":41237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":41240,"nodeType":"VariableDeclaration","src":"1907:23:30","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1923:7:30","scope":41298,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":41243,"nodeType":"ErrorDefinition","src":"1994:37:30","nodes":[],"documentation":{"id":41241,"nodeType":"StructuredDocumentation","src":"1937:52:30","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:30","parameters":{"id":41242,"nodeType":"ParameterList","parameters":[],"src":"2028:2:30"}},{"id":41251,"nodeType":"FunctionDefinition","src":"2037:52:30","nodes":[],"body":{"id":41250,"nodeType":"Block","src":"2051:38:30","nodes":[],"statements":[{"expression":{"id":41248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41246,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41240,"src":"2061:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41247,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41235,"src":"2071:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41249,"nodeType":"ExpressionStatement","src":"2061:21:30"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":41244,"nodeType":"ParameterList","parameters":[],"src":"2048:2:30"},"returnParameters":{"id":41245,"nodeType":"ParameterList","parameters":[],"src":"2051:0:30"},"scope":41298,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":41262,"nodeType":"ModifierDefinition","src":"2466:103:30","nodes":[],"body":{"id":41261,"nodeType":"Block","src":"2490:79:30","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41254,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41278,"src":"2500:19:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":41255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41256,"nodeType":"ExpressionStatement","src":"2500:21:30"},{"id":41257,"nodeType":"PlaceholderStatement","src":"2531:1:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":41258,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41286,"src":"2542:18:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":41259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41260,"nodeType":"ExpressionStatement","src":"2542:20:30"}]},"documentation":{"id":41252,"nodeType":"StructuredDocumentation","src":"2095:366:30","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2475:12:30","parameters":{"id":41253,"nodeType":"ParameterList","parameters":[],"src":"2487:2:30"},"virtual":false,"visibility":"internal"},{"id":41278,"nodeType":"FunctionDefinition","src":"2575:307:30","nodes":[],"body":{"id":41277,"nodeType":"Block","src":"2614:268:30","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":41267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":41265,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41240,"src":"2702:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":41266,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41238,"src":"2713:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":41272,"nodeType":"IfStatement","src":"2698:86:30","trueBody":{"id":41271,"nodeType":"Block","src":"2722:62:30","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":41268,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41243,"src":"2743:28:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":41269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":41270,"nodeType":"RevertStatement","src":"2736:37:30"}]}},{"expression":{"id":41275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41273,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41240,"src":"2858:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41274,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41238,"src":"2868:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41276,"nodeType":"ExpressionStatement","src":"2858:17:30"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:30","parameters":{"id":41263,"nodeType":"ParameterList","parameters":[],"src":"2603:2:30"},"returnParameters":{"id":41264,"nodeType":"ParameterList","parameters":[],"src":"2614:0:30"},"scope":41298,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":41286,"nodeType":"FunctionDefinition","src":"2888:208:30","nodes":[],"body":{"id":41285,"nodeType":"Block","src":"2926:170:30","nodes":[],"statements":[{"expression":{"id":41283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41281,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41240,"src":"3068:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41282,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41235,"src":"3078:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":41284,"nodeType":"ExpressionStatement","src":"3068:21:30"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:30","parameters":{"id":41279,"nodeType":"ParameterList","parameters":[],"src":"2915:2:30"},"returnParameters":{"id":41280,"nodeType":"ParameterList","parameters":[],"src":"2926:0:30"},"scope":41298,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":41297,"nodeType":"FunctionDefinition","src":"3275:106:30","nodes":[],"body":{"id":41296,"nodeType":"Block","src":"3339:42:30","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":41294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":41292,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41240,"src":"3356:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":41293,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41238,"src":"3367:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":41291,"id":41295,"nodeType":"Return","src":"3349:25:30"}]},"documentation":{"id":41287,"nodeType":"StructuredDocumentation","src":"3102:168:30","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:30","parameters":{"id":41288,"nodeType":"ParameterList","parameters":[],"src":"3307:2:30"},"returnParameters":{"id":41291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":41297,"src":"3333:4:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":41289,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:30"},"scope":41298,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":41232,"nodeType":"StructuredDocumentation","src":"135:894:30","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[41298],"name":"ReentrancyGuard","nameLocation":"1048:15:30","scope":41299,"usedErrors":[41243],"usedEvents":[]}],"license":"MIT"},"id":30}